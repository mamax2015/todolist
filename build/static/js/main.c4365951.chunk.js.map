{"version":3,"sources":["addToDo.js","viewTodo.js","editTodo.js","todo.js","spinner.js","resetLocalStorage.js","main.js","notFound.js","checkIsTodoExist.js","edit.js","view.js","appRouter.js","index.js"],"names":["AddToDo","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","title","onChange","bind","assertThisInitialized","saveNewTodo","inherits","createClass","key","value","event","setState","target","react_default","a","createElement","className","type","placeholder","aria-label","aria-describedby","onClick","React","Component","ViewTodo","apply","arguments","_this$props","todo","changeStatus","removeTodo","changeMode","id","isDone","Fragment","checked","react_router_dom","to","concat","EditTodo","newTitle","changeValue","saveTodo","cancelEdit","ToDo","edit","_this2","editTodo_EditTodo","viewTodo_ViewTodo","onCheck","Spinner","ResetLocalStorage","localStorage","clear","resetStorage","Main","newTodoTitle","undefined","todos","map","todo_ToDo","dataLoaded","RenderListOfTodos","addToDo_AddToDo","resetLocalStorage_ResetLocalStorage","spinner_Spinner","NotFound","checkIsTodoExist","match","length","todoId","params","parseInt","isNaN","find","el","Edit","newDescription","redirectToMain","updateValue","saveUpdates","setStatWithTodo","field","newValue","e","preventDefault","_this$state","description","prevProps","_this$props2","react_router","from","htmlFor","rows","notFound_NotFound","View","AppRouter","newId","getMaxId","push","updateNewValue","storedData","getItem","JSON","parse","setTimeout","fetch","then","response","json","data","setItem","stringify","maxId","Infinity","forEach","toDelIndex","findIndex","splice","_this3","exact","path","render","main_Main","assign","edit_Edit","component","view_View","ReactDOM","appRouter_AppRouter","document","getElementById"],"mappings":"qQAEaA,EAAb,SAAAC,GACI,SAAAD,EAAYE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,IACfG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAJ,GAAAS,KAAAH,KAAMJ,KACDQ,MAAQ,CACTC,MAAO,IAEXR,EAAKS,SAAWT,EAAKS,SAASC,KAAdT,OAAAU,EAAA,EAAAV,CAAAD,IAChBA,EAAKY,YAAcZ,EAAKY,YAAYF,KAAjBT,OAAAU,EAAA,EAAAV,CAAAD,IANJA,EADvB,OAAAC,OAAAY,EAAA,EAAAZ,CAAAJ,EAAAC,GAAAG,OAAAa,EAAA,EAAAb,CAAAJ,EAAA,EAAAkB,IAAA,WAAAC,MAAA,SAUaC,GACLd,KAAKe,SAAS,CACVV,MAAOS,EAAME,OAAOH,UAZhC,CAAAD,IAAA,cAAAC,MAAA,WAiBQb,KAAKJ,MAAMa,YAAYT,KAAKI,MAAMC,OAElCL,KAAKe,SAAS,CACVV,MAAO,OApBnB,CAAAO,IAAA,SAAAC,MAAA,WAwBQ,OACII,EAAAC,EAAAC,cAAA,OAAKC,UAAU,IACXH,EAAAC,EAAAC,cAAA,SAAOE,KAAK,OACRD,UAAU,wBACVE,YAAY,gBACZC,aAAW,gBACXC,mBAAiB,eACjBX,MAAOb,KAAKI,MAAMC,MAClBC,SAAUN,KAAKM,WAEnBW,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAkBK,QAASzB,KAAKS,aAAlD,YAlChBf,EAAA,CAA6BgC,IAAMC,mBCCtBC,EAAb,SAAAjC,GAAA,SAAAiC,IAAA,OAAA9B,OAAAC,EAAA,EAAAD,CAAAE,KAAA4B,GAAA9B,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8B,GAAAC,MAAA7B,KAAA8B,YAAA,OAAAhC,OAAAY,EAAA,EAAAZ,CAAA8B,EAAAjC,GAAAG,OAAAa,EAAA,EAAAb,CAAA8B,EAAA,EAAAhB,IAAA,SAAAC,MAAA,WACa,IAAAkB,EACkD/B,KAAKJ,MAApDoC,EADHD,EACGC,KAAMC,EADTF,EACSE,aAAcC,EADvBH,EACuBG,WAAYC,EADnCJ,EACmCI,WAChCC,EAAuBJ,EAAvBI,GAAKC,EAAkBL,EAAlBK,OAAQhC,EAAU2B,EAAV3B,MAErB,OACIY,EAAAC,EAAAC,cAACF,EAAAC,EAAMoB,SAAP,KAEQrB,EAAAC,EAAAC,cAAA,MAAIC,UAAW,oBAAsBiB,EAAS,QAAU,KACpDpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAEfH,EAAAC,EAAAC,cAAA,SAAOE,KAAK,WAAWR,MAAM,GAAG0B,QAASF,EAAQD,GAAI,WAAaA,EAAI9B,SAAU2B,IAC5EhB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAMC,GAAE,SAAAC,OAAWN,IAAnB,IAA2B/B,GAE3BY,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gDAAgDK,QAASS,GAAYjB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gCACvGH,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAMpB,UAAU,gDAAgDqB,GAAE,SAAAC,OAAWN,IAA7E,aACAnB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gDAAgDC,KAAK,SAASI,QAASU,GAAzF,qBAhB5BP,EAAA,CAA8BF,IAAMC,WCDvBgB,EAAb,SAAAhD,GAAA,SAAAgD,IAAA,OAAA7C,OAAAC,EAAA,EAAAD,CAAAE,KAAA2C,GAAA7C,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6C,GAAAd,MAAA7B,KAAA8B,YAAA,OAAAhC,OAAAY,EAAA,EAAAZ,CAAA6C,EAAAhD,GAAAG,OAAAa,EAAA,EAAAb,CAAA6C,EAAA,EAAA/B,IAAA,SAAAC,MAAA,WAEQ,IAAMmB,EAAOhC,KAAKJ,MAAMoC,KACxB,OACIf,EAAAC,EAAAC,cAACF,EAAAC,EAAMoB,SAAP,KACIrB,EAAAC,EAAAC,cAAA,SAAOE,KAAK,OAAOD,UAAU,eAAeE,YAAY,qBAAqBC,aAAW,qBAAqBC,mBAAiB,eAAeX,MAAOmB,EAAKY,SAAUtC,SAAUN,KAAKJ,MAAMiD,cACxL5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAkBK,QAASzB,KAAKJ,MAAMkD,UAAxD,QACA7B,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAkBK,QAASzB,KAAKJ,MAAMmD,YAAxD,gBARpBJ,EAAA,CAA8BjB,IAAMC,WCEvBqB,EAAb,SAAArD,GACI,SAAAqD,EAAYpD,GAAM,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgD,GAEd,IAAMhB,GADNnC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkD,GAAA7C,KAAAH,KAAMJ,KACYA,MAAMoC,KAFV,OAGdnC,EAAKO,MAAQ,CACTgC,GAAKJ,EAAKI,GACV/B,MAAQ2B,EAAK3B,MACb4C,KAAMjB,EAAKiB,KACXL,SAAWZ,EAAK3B,MAChBgC,OAASL,EAAKK,QAElBxC,EAAKsC,WAAatC,EAAKsC,WAAW5B,KAAhBT,OAAAU,EAAA,EAAAV,CAAAD,IAClBA,EAAKgD,YAAchD,EAAKgD,YAAYtC,KAAjBT,OAAAU,EAAA,EAAAV,CAAAD,IACnBA,EAAKiD,SAAWjD,EAAKiD,SAASvC,KAAdT,OAAAU,EAAA,EAAAV,CAAAD,IAChBA,EAAKkD,WAAalD,EAAKkD,WAAWxC,KAAhBT,OAAAU,EAAA,EAAAV,CAAAD,IAClBA,EAAKoC,aAAepC,EAAKoC,aAAa1B,KAAlBT,OAAAU,EAAA,EAAAV,CAAAD,IAdNA,EADtB,OAAAC,OAAAY,EAAA,EAAAZ,CAAAkD,EAAArD,GAAAG,OAAAa,EAAA,EAAAb,CAAAkD,EAAA,EAAApC,IAAA,aAAAC,MAAA,WAmBQb,KAAKe,SAAS,CACVkC,MAAOjD,KAAKI,MAAM6C,SApB9B,CAAArC,IAAA,aAAAC,MAAA,WAyBQb,KAAKe,SAAS,CACVkC,MAAM,EACNL,SAAU5C,KAAKI,MAAMC,UA3BjC,CAAAO,IAAA,cAAAC,MAAA,SA+BgBC,GACRd,KAAKe,SAAS,CAAC6B,SAAW9B,EAAME,OAAOH,UAhC/C,CAAAD,IAAA,WAAAC,MAAA,WAoCQb,KAAKJ,MAAMkD,SAAS9C,KAAKI,MAAMgC,GAAGpC,KAAKI,MAAMwC,YApCrD,CAAAhC,IAAA,eAAAC,MAAA,SAuCiBC,GACT,IAAMyB,EAAUzB,EAAME,OAAOuB,QAC7BvC,KAAKJ,MAAMqC,aAAajC,KAAKI,MAAMgC,GAAGG,GACtCvC,KAAKe,SAAS,CACVsB,OAASE,MA3CrB,CAAA3B,IAAA,SAAAC,MAAA,WA+Ca,IAAAqC,EAAAlD,KACCgC,EAAOhC,KAAKJ,MAAMoC,KAClBE,EAAa,WACfgB,EAAKtD,MAAMsC,WAAWF,EAAKI,KAwB/B,OACInB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAtBZ8B,EAAK9C,MAAM6C,KAENhC,EAAAC,EAAAC,cAACgC,EAAD,CACInB,KAAMkB,EAAK9C,MACXyC,YAAaK,EAAKL,YAClBV,WAAYe,EAAKf,WACjBW,SAAUI,EAAKJ,SACfC,WAAYG,EAAKH,aAIrB9B,EAAAC,EAAAC,cAACiC,EAAD,CACInB,aAAciB,EAAKjB,aACnBD,KAAMkB,EAAK9C,MACX8B,WAAYA,EACZmB,QAASH,EAAKG,QACdlB,WAAYe,EAAKf,kBArEzCa,EAAA,CAA0BtB,IAAMC,WCFnB2B,EAAb,SAAA3D,GAAA,SAAA2D,IAAA,OAAAxD,OAAAC,EAAA,EAAAD,CAAAE,KAAAsD,GAAAxD,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwD,GAAAzB,MAAA7B,KAAA8B,YAAA,OAAAhC,OAAAY,EAAA,EAAAZ,CAAAwD,EAAA3D,GAAAG,OAAAa,EAAA,EAAAb,CAAAwD,EAAA,EAAA1C,IAAA,SAAAC,MAAA,WAEQ,OACII,EAAAC,EAAAC,cAACF,EAAAC,EAAMoB,SAAP,KACIrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WADnB,0CAHZkC,EAAA,CAA6B5B,IAAMC,WCAtB4B,EAAb,SAAA5D,GAAA,SAAA4D,IAAA,OAAAzD,OAAAC,EAAA,EAAAD,CAAAE,KAAAuD,GAAAzD,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyD,GAAA1B,MAAA7B,KAAA8B,YAAA,OAAAhC,OAAAY,EAAA,EAAAZ,CAAAyD,EAAA5D,GAAAG,OAAAa,EAAA,EAAAb,CAAAyD,EAAA,EAAA3C,IAAA,eAAAC,MAAA,WAEQ2C,aAAaC,UAFrB,CAAA7C,IAAA,SAAAC,MAAA,WAKQ,OACII,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAkBK,QAASzB,KAAK0D,cAAlD,0BANZH,EAAA,CAAuC7B,IAAMC,WCKhCgC,SAAb,SAAAhE,GACI,SAAAgE,EAAY/D,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2D,IACf9D,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6D,GAAAxD,KAAAH,KAAMJ,KACDQ,MAAQ,CACTwD,aAAchE,EAAMgE,cAExB/D,EAAKY,YAAcZ,EAAKY,YAAYF,KAAjBT,OAAAU,EAAA,EAAAV,CAAAD,IALJA,EADvB,OAAAC,OAAAY,EAAA,EAAAZ,CAAA6D,EAAAhE,GAAAG,OAAAa,EAAA,EAAAb,CAAA6D,EAAA,EAAA/C,IAAA,cAAAC,MAAA,SASgB+C,GACR5D,KAAKJ,MAAMkD,cAASe,EAAWD,KAVvC,CAAAhD,IAAA,oBAAAC,MAAA,WAawB,IAAAkB,EAC+B/B,KAAKJ,MAA5CqC,EADQF,EACRE,aAAcC,EADNH,EACMG,WAAYY,EADlBf,EACkBe,SAYlC,OAXc9C,KAAKJ,MAAMkE,MAAMC,IAAI,SAAA/B,GAAQ,IAC/B3B,EAAc2B,EAAd3B,MAAO+B,EAAOJ,EAAPI,GACf,OACInB,EAAAC,EAAAC,cAAC6C,EAAD,CACI/B,aAAcA,EACdrB,IAAKP,EAAQ+B,EACbJ,KAAMA,EACNE,WAAYA,EACZY,SAAUA,QAvB9B,CAAAlC,IAAA,SAAAC,MAAA,WA8BQ,OAAKb,KAAKJ,MAAMqE,WAIZhD,EAAAC,EAAAC,cAACF,EAAAC,EAAMoB,SAAP,KACIrB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBACbpB,KAAKkE,qBAENjD,EAAAC,EAAAC,cAACgD,EAAD,CACI1D,YAAaT,KAAKS,cAEtBQ,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WACNF,EAAAC,EAAAC,cAACiD,EAAD,OAXGnD,EAAAC,EAAAC,cAACkD,EAAD,UA/BnBV,EAAA,CAA0BjC,IAAMC,oBCLnB2C,EAAb,SAAA3E,GAAA,SAAA2E,IAAA,OAAAxE,OAAAC,EAAA,EAAAD,CAAAE,KAAAsE,GAAAxE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwE,GAAAzC,MAAA7B,KAAA8B,YAAA,OAAAhC,OAAAY,EAAA,EAAAZ,CAAAwE,EAAA3E,GAAAG,OAAAa,EAAA,EAAAb,CAAAwE,EAAA,EAAA1D,IAAA,SAAAC,MAAA,WAEQ,OACII,EAAAC,EAAAC,cAAA,+BAHZmD,EAAA,CAA8B5C,IAAMC,WCcrB4C,MAhBf,SAA0BT,EAAOU,GAC7B,IAAKV,EAAMW,OACP,OAAO,EAFyB,IAIpBC,EAAaF,EAAvBG,OAAUD,OAEhB,KADAA,EAASE,SAASF,MACFG,MACZ,OAAO,EAEX,IAAM7C,EAAO8B,EAAMgB,KAAK,SAAAC,GAAE,OAAIA,EAAG3C,KAAOsC,IACxC,OAAK1C,IACM,GCLFgD,EAAb,SAAArF,GACI,SAAAqF,EAAYpF,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgF,IACfnF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkF,GAAA7E,KAAAH,KAAMJ,KACDQ,MAAQ,CACTgC,GAAI,GACJQ,SAAU,GACVqC,eAAgB,GAChBC,gBAAgB,GAEpBrF,EAAKsF,YAActF,EAAKsF,YAAY5E,KAAjBT,OAAAU,EAAA,EAAAV,CAAAD,IACnBA,EAAKuF,YAAcvF,EAAKuF,YAAY7E,KAAjBT,OAAAU,EAAA,EAAAV,CAAAD,IACnBA,EAAKwF,gBAAkBxF,EAAKwF,gBAAgB9E,KAArBT,OAAAU,EAAA,EAAAV,CAAAD,IAVRA,EADvB,OAAAC,OAAAY,EAAA,EAAAZ,CAAAkF,EAAArF,GAAAG,OAAAa,EAAA,EAAAb,CAAAkF,EAAA,EAAApE,IAAA,cAAAC,MAAA,SAcgBC,EAAOwE,GACf,IAAMC,EAAW,GACjBA,EAASD,GAASxE,EAAME,OAAOH,MAC/Bb,KAAKe,SAASwE,KAjBtB,CAAA3E,IAAA,cAAAC,MAAA,SAoBgB2E,GACRA,EAAEC,iBADS,IAAAC,EAE8B1F,KAAKI,MAAtCgC,EAFGsD,EAEHtD,GAAIQ,EAFD8C,EAEC9C,SAAUqC,EAFXS,EAEWT,eACtBjF,KAAKJ,MAAMkD,SAASV,EAAIQ,EAAUqC,GAClCjF,KAAKe,SAAS,CACVmE,gBAAgB,MAzB5B,CAAAtE,IAAA,kBAAAC,MAAA,WA6BsB,IAAAkB,EACW/B,KAAKJ,MAAtBkE,EADM/B,EACN+B,MAAOU,EADDzC,EACCyC,MACTxC,EAAOuC,EAAiBT,EAAOU,GACjCxC,GACAhC,KAAKe,SAAS,CACVqB,GAAIJ,EAAKI,GACTQ,SAAUZ,EAAK3B,MACf4E,eAAgBjD,EAAK2D,gBApCrC,CAAA/E,IAAA,oBAAAC,MAAA,WA0CQb,KAAKqF,oBA1Cb,CAAAzE,IAAA,qBAAAC,MAAA,SA6CuB+E,GACX5F,KAAKJ,MAAMkE,MAAMW,SAAWmB,EAAU9B,MAAMW,QAC5CzE,KAAKqF,oBA/CjB,CAAAzE,IAAA,SAAAC,MAAA,WAmDa,IAAAqC,EAAAlD,KAAA6F,EACgC7F,KAAKJ,MAAlCqE,EADH4B,EACG5B,WAAYH,EADf+B,EACe/B,MAAOU,EADtBqB,EACsBrB,MAC3B,OAAKP,EAGAM,EAAiBT,EAAOU,IAOF,IADIxE,KAAKI,MAAxB8E,eAEGjE,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CAAUrD,GAAG,IAAIsD,KAAK,cAG7B9E,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,SAAO6E,QAAQ,iBAAf,cACA/E,EAAAC,EAAAC,cAAA,SAAOE,KAAK,OAAOf,SAAU,SAACkF,GAAD,OAAOtC,EAAKiC,YAAYK,EAAG,aAAa3E,MAAOb,KAAKI,MAAMwC,SAAUxB,UAAU,eAAegB,GAAG,gBAAgBd,YAAY,iBAIzJL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,SAAO6E,QAAQ,gBAAf,oBACA/E,EAAAC,EAAAC,cAAA,YAAUC,UAAU,eAAed,SAAU,SAACkF,GAAD,OAAOtC,EAAKiC,YAAYK,EAAG,mBAAmBpD,GAAG,eAAe6D,KAAK,IAAIpF,MAAOb,KAAKI,MAAM6E,kBAExIhE,EAAAC,EAAAC,cAAA,UAAQE,KAAK,SAASD,UAAU,kBAAkBK,QAASzB,KAAKoF,aAAhE,QACAnE,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAMpB,UAAU,kBAAkBqB,GAAI,KAAtC,qBAtBAxB,EAAAC,EAAAC,cAAC+E,EAAD,MAJGjF,EAAAC,EAAAC,cAACkD,EAAD,UAtDnBW,EAAA,CAA0BtD,IAAMC,WCAnBwE,EAAb,SAAAxG,GAAA,SAAAwG,IAAA,OAAArG,OAAAC,EAAA,EAAAD,CAAAE,KAAAmG,GAAArG,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqG,GAAAtE,MAAA7B,KAAA8B,YAAA,OAAAhC,OAAAY,EAAA,EAAAZ,CAAAqG,EAAAxG,GAAAG,OAAAa,EAAA,EAAAb,CAAAqG,EAAA,EAAAvF,IAAA,SAAAC,MAAA,WACa,IAAAkB,EACgC/B,KAAKJ,MAAlCqE,EADHlC,EACGkC,WAAYH,EADf/B,EACe+B,MAAOU,EADtBzC,EACsByC,MAC3B,IAAKP,EACD,OAAOhD,EAAAC,EAAAC,cAACkD,EAAD,MAEX,IAAMrC,EAAOuC,EAAiBT,EAAOU,GACrC,IAAKxC,EACD,OACIf,EAAAC,EAAAC,cAAC+E,EAAD,MARH,IAWG7F,EAAuB2B,EAAvB3B,MAAOsF,EAAgB3D,EAAhB2D,YAEf,OACI1E,EAAAC,EAAAC,cAACF,EAAAC,EAAMoB,SAAP,KACIrB,EAAAC,EAAAC,cAAA,eACIF,EAAAC,EAAAC,cAAA,UAAKd,GACLY,EAAAC,EAAAC,cAAA,SAAIwE,IAER1E,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAMpB,UAAU,yBAAyBqB,GAAI,KAA7C,yBApBhB0D,EAAA,CAA0BzE,IAAMC,WCEnByE,EAAb,SAAAzG,GACI,SAAAyG,EAAYxG,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoG,IACfvG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsG,GAAAjG,KAAAH,KAAMJ,KA+CVkD,SAAW,SAAC4B,EAAQrE,EAAOsF,GACvB,GAAKjB,EAQE,CACH,IAAM1C,EAAOnC,EAAKO,MAAM0D,MAAMgB,KAAK,SAAAC,GAAE,OAAIA,EAAG3C,KAAOsC,IACnD1C,EAAK3B,MAAQA,EACb2B,EAAK2D,YAAcA,MAXV,CACT,IACMU,EADQxG,EAAKyG,WACG,EACtBzG,EAAKO,MAAM0D,MAAMyC,KAAK,CAClBnE,GAAIiE,EACJhG,MAAOA,EACPsF,YAAa,KAOrB9F,EAAKkB,SAAS,CACV+C,MAAOjE,EAAKO,MAAM0D,SA7DtBjE,EAAKO,MAAQ,CACT0D,MAAO,GACPG,YAAY,EACZT,cAAc,GAElB3D,EAAK2G,eAAiB3G,EAAK2G,eAAejG,KAApBT,OAAAU,EAAA,EAAAV,CAAAD,IACtBA,EAAKoC,aAAepC,EAAKoC,aAAa1B,KAAlBT,OAAAU,EAAA,EAAAV,CAAAD,IACpBA,EAAKqC,WAAarC,EAAKqC,WAAW3B,KAAhBT,OAAAU,EAAA,EAAAV,CAAAD,IATHA,EADvB,OAAAC,OAAAY,EAAA,EAAAZ,CAAAsG,EAAAzG,GAAAG,OAAAa,EAAA,EAAAb,CAAAsG,EAAA,EAAAxF,IAAA,oBAAAC,MAAA,WAawB,IAAAqC,EAAAlD,KACZyG,EAAajD,aAAakD,QAAQ,SACtC,GAAID,EAAY,CACZ,IAAM3C,EAAQ6C,KAAKC,MAAMH,GACzBzG,KAAKe,SAAS,CACV+C,MAAOA,EACPG,YAAY,EACZT,cAAc,SAGlBqD,WAAW,WACPC,MAAM,aACDC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAQ,IACFpD,EAAUoD,EAAVpD,MACRZ,EAAKnC,SAAS,CACV+C,MAAOA,EACPG,YAAY,IAEhBT,aAAa2D,QAAQ,QAASR,KAAKS,UAAUtD,OAEtD,OAlCf,CAAAlD,IAAA,WAAAC,MAAA,WAuCQ,IAAMiD,EAAQ9D,KAAKI,MAAM0D,MACrBuD,GAASC,IAMb,OALAxD,EAAMyD,QAAQ,SAAAvF,GACNA,EAAKI,GAAKiF,IACVA,EAAQrF,EAAKI,MAGdiF,IA9Cf,CAAAzG,IAAA,aAAAC,MAAA,SAoEe6D,GACP,IAAM8C,EAAaxH,KAAKI,MAAM0D,MAAM2D,UAAU,SAAA1C,GAC1C,OAAOA,EAAG3C,KAAOsC,IAErB1E,KAAKI,MAAM0D,MAAM4D,OAAOF,EAAY,GACpCxH,KAAKe,SAAS,CAAE+C,MAAO9D,KAAKI,MAAM0D,UAzE1C,CAAAlD,IAAA,iBAAAC,MAAA,SA4EmBC,EAAOwE,GAClB,IAAMC,EAAW,GACjBA,EAASD,GAASxE,EAAME,OAAOH,MAC/Bb,KAAKe,SAASwE,KA/EtB,CAAA3E,IAAA,eAAAC,MAAA,SAkFiB6D,EAAQ7D,GACJb,KAAKI,MAAM0D,MAAMgB,KAAK,SAAAC,GAAE,OAAIA,EAAG3C,KAAOsC,IAC9CrC,OAASxB,EACdb,KAAKe,SAAS,CACV+C,MAAO9D,KAAKI,MAAM0D,UAtF9B,CAAAlD,IAAA,SAAAC,MAAA,WA2Fa,IAAA8G,EAAA3H,KACG8D,EAAU9D,KAAKI,MAAf0D,MAOR,OACI7C,EAAAC,EAAAC,cAACF,EAAAC,EAAMoB,SAAP,KANGqF,EAAKvH,MAAMoD,aACHvC,EAAAC,EAAAC,cAAA,qCAEJ,KAKHF,EAAAC,EAAAC,cAACqB,EAAA,EAAD,KACIvB,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,KACI7E,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CACI8B,OAAK,EAACC,KAAK,IACXC,OAAQ,SAAAlI,GAAK,OAAIqB,EAAAC,EAAAC,cAAC4G,EAADjI,OAAAkI,OAAA,GAAUpI,EAAV,CACbkE,MAAOA,EACPhB,SAAU6E,EAAK7E,SACf0D,eAAgBmB,EAAKnB,eACrBvE,aAAc0F,EAAK1F,aACnBC,WAAYyF,EAAKzF,WACjB+B,WAAY0D,EAAKvH,MAAM6D,WACvBT,aAAcmE,EAAKvH,MAAMoD,mBAGjCvC,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CACI+B,KAAK,gBACLC,OAAQ,SAAAlI,GAAK,OAAIqB,EAAAC,EAAAC,cAAC8G,EAADnI,OAAAkI,OAAA,GAAUpI,EAAV,CACbkE,MAAOA,EACPhB,SAAU6E,EAAK7E,SACf0D,eAAgBmB,EAAKnB,eACrBvC,WAAY0D,EAAKvH,MAAM6D,WACvBT,aAAcmE,EAAKvH,MAAMoD,mBAIjCvC,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CACI+B,KAAK,gBACLK,UAAW,SAAAtI,GAAK,OAAIqB,EAAAC,EAAAC,cAACgH,EAADrI,OAAAkI,OAAA,GAAUpI,EAAV,CAChBkE,MAAOA,EACPG,WAAY0D,EAAKvH,MAAM6D,WACvBT,aAAcmE,EAAKvH,MAAMoD,mBAGjCvC,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CAAO+B,KAAK,IAAID,OAAO,EAAOM,UAAW5D,WAvIjE8B,EAAA,CAA+B1E,IAAMC,WCFrCyG,IAASN,OAAO7G,EAAAC,EAAAC,cAACkH,EAAD,MAAeC,SAASC,eAAe","file":"static/js/main.c4365951.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport class AddToDo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: ''\r\n        }\r\n        this.onChange = this.onChange.bind(this);\r\n        this.saveNewTodo = this.saveNewTodo.bind(this);\r\n        // this.holdNewTitle = this.holdNewTitle.bind(this);\r\n    }\r\n    onChange(event) {\r\n        this.setState({\r\n            title: event.target.value\r\n        })\r\n    }\r\n\r\n    saveNewTodo(){\r\n        this.props.saveNewTodo(this.state.title);\r\n\r\n        this.setState({\r\n            title: ''\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"\">\r\n                <input type=\"text\"\r\n                    className=\"form-control add-todo\"\r\n                    placeholder=\"Add a ToDo...\"\r\n                    aria-label=\"Add a ToDo...\"\r\n                    aria-describedby=\"basic-addon2\"\r\n                    value={this.state.title}\r\n                    onChange={this.onChange} \r\n                />\r\n                <button className=\"btn btn-success\" onClick={this.saveNewTodo}>Add</button>\r\n               \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport class ViewTodo extends React.Component {\r\n    render() {\r\n        const { todo, changeStatus, removeTodo, changeMode } = this.props;\r\n        const { id , isDone, title } = todo;\r\n\r\n        return (\r\n            <React.Fragment>\r\n\r\n                    <li className={\"ui-state-default\" + (isDone ? ' done' : '')} >\r\n                        <div className=\"checkbox\">\r\n                            \r\n                        <input type=\"checkbox\" value=\"\" checked={isDone} id={\"checkFor\" + id} onChange={changeStatus} />\r\n                            <Link to={`/view/${id}`}> {title}\r\n                            </Link>\r\n                            <button className=\"remove-item btn btn-default btn-xs pull-right\" onClick={removeTodo}><span className=\"glyphicon glyphicon-remove\"></span></button>\r\n                            <Link className=\"remove-item btn btn-default btn-xs pull-right\" to={`/edit/${id}`}>Full edit</Link>\r\n                            <button className=\"remove-item btn btn-default btn-xs pull-right\" type=\"button\" onClick={changeMode}>Edit Title</button>\r\n                        </div>\r\n                    </li> \r\n                               \r\n                {/* <div className=\"form-check\">\r\n                    <input className=\"form-check-input\" type=\"checkbox\" value=\"\" checked={isDone} id={\"checkFor\" + id} onChange={changeStatus} />\r\n                    <div className={\"title\" + (isDone ? ' done' : '')}>\r\n                        <Link to={`/view/${id}`}>{title}</Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"input-group-append\">\r\n                    <button className=\"btn btn-outline-secondary\" type=\"button\" onClick={changeMode}>Edit Title</button>\r\n                    <Link className=\"btn btn-outline-secondary\" to={`/edit/${id}`}>Full edit</Link>\r\n                    <button className=\"btn btn-outline-secondary\" type=\"button\" onClick={removeTodo}>Delete</button>\r\n                </div> */}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport class EditTodo extends React.Component {\r\n    render() {\r\n        const todo = this.props.todo;\r\n        return (\r\n            <React.Fragment>\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"Enter new title...\" aria-label=\"Enter New title...\" aria-describedby=\"basic-addon2\" value={todo.newTitle} onChange={this.props.changeValue} />\r\n                <div className=\"input-group-append\">\r\n                    <button className=\"btn btn-default\" onClick={this.props.saveTodo}>Save</button>\r\n                    <button className=\"btn btn-default\" onClick={this.props.cancelEdit}>Cancel</button>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {ViewTodo} from './viewTodo';\r\nimport {EditTodo} from './editTodo';\r\n\r\nexport class ToDo extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        const todo = this.props.todo;\r\n        this.state = {\r\n            id : todo.id,\r\n            title : todo.title,\r\n            edit: todo.edit,\r\n            newTitle : todo.title,\r\n            isDone : todo.isDone\r\n        }\r\n        this.changeMode = this.changeMode.bind(this);\r\n        this.changeValue = this.changeValue.bind(this);\r\n        this.saveTodo = this.saveTodo.bind(this);\r\n        this.cancelEdit = this.cancelEdit.bind(this);\r\n        this.changeStatus = this.changeStatus.bind(this);\r\n    }\r\n\r\n    changeMode() {\r\n        this.setState({\r\n            edit: !this.state.edit\r\n        });\r\n    }\r\n\r\n    cancelEdit(){\r\n        this.setState({\r\n            edit: false,\r\n            newTitle: this.state.title\r\n        });\r\n    }\r\n\r\n    changeValue(event){\r\n        this.setState({newTitle : event.target.value})\r\n    }\r\n\r\n    saveTodo(){\r\n        this.props.saveTodo(this.state.id,this.state.newTitle);\r\n    }\r\n\r\n    changeStatus(event){\r\n        const checked = event.target.checked;\r\n        this.props.changeStatus(this.state.id,checked);\r\n        this.setState({\r\n            isDone : checked\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const todo = this.props.todo;\r\n        const removeTodo = () => {\r\n            this.props.removeTodo(todo.id);\r\n        }\r\n        const renderTodo = () => {\r\n            if(this.state.edit){\r\n                return (\r\n                    <EditTodo \r\n                        todo={this.state} \r\n                        changeValue={this.changeValue} \r\n                        changeMode={this.changeMode} \r\n                        saveTodo={this.saveTodo} \r\n                        cancelEdit={this.cancelEdit} />\r\n                )\r\n            }else{\r\n                return (\r\n                    <ViewTodo \r\n                        changeStatus={this.changeStatus} \r\n                        todo={this.state} \r\n                        removeTodo={removeTodo} \r\n                        onCheck={this.onCheck}\r\n                        changeMode={this.changeMode} />\r\n                )\r\n            }\r\n        }\r\n        \r\n        return (\r\n            <div className=\"input-group mb-3\">                \r\n                {renderTodo()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport class Spinner extends React.Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"loader\"></div>\r\n                Geting data from remote storage...\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nexport class ResetLocalStorage extends React.Component{\r\n    resetStorage(){\r\n        localStorage.clear();\r\n    }\r\n    render(){\r\n        return (\r\n            <button className=\"btn btn-default\" onClick={this.resetStorage}>clear localStorage</button>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { AddToDo } from './addToDo';\r\nimport { ToDo } from './todo';\r\nimport { Spinner } from './spinner';\r\nimport { ResetLocalStorage } from './resetLocalStorage';\r\nimport './App.css';\r\n\r\nexport class Main extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            newTodoTitle: props.newTodoTitle\r\n        }\r\n        this.saveNewTodo = this.saveNewTodo.bind(this);\r\n    }\r\n\r\n    saveNewTodo(newTodoTitle) {\r\n        this.props.saveTodo(undefined, newTodoTitle);\r\n    }\r\n\r\n    RenderListOfTodos() {\r\n        const { changeStatus, removeTodo, saveTodo } = this.props;\r\n        const todos = this.props.todos.map(todo => {\r\n            const { title, id } = todo\r\n            return (\r\n                <ToDo\r\n                    changeStatus={changeStatus}\r\n                    key={title + id}\r\n                    todo={todo}\r\n                    removeTodo={removeTodo}\r\n                    saveTodo={saveTodo} />\r\n            );\r\n        });\r\n        return todos;\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.dataLoaded) {\r\n            return <Spinner />\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n                <ul className=\"list-unstyled\">\r\n                {this.RenderListOfTodos()}\r\n                </ul>\r\n                <AddToDo\r\n                    saveNewTodo={this.saveNewTodo}\r\n                />\r\n                <br /><br />\r\n                <ResetLocalStorage />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport class NotFound extends React.Component {\r\n    render() {\r\n        return (\r\n            <p>Page not Found</p>\r\n        )\r\n    }\r\n}","function checkIsTodoExist(todos, match) {\r\n    if (!todos.length) {\r\n        return false;\r\n    }\r\n    let { params: { todoId } } = match;\r\n    todoId = parseInt(todoId);\r\n    if (!todoId || !isNaN) {\r\n        return false;\r\n    }\r\n    const todo = todos.find(el => el.id === todoId);\r\n    if (!todo) {\r\n        return false;\r\n    }\r\n    return todo;\r\n}\r\n\r\nexport default checkIsTodoExist;","import React from 'react';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport { NotFound } from './notFound';\r\nimport { Spinner } from './spinner';\r\nimport checkIsTodoExist from './checkIsTodoExist';\r\n\r\nexport class Edit extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: '',\r\n            newTitle: '',\r\n            newDescription: '',\r\n            redirectToMain: false\r\n        }\r\n        this.updateValue = this.updateValue.bind(this);\r\n        this.saveUpdates = this.saveUpdates.bind(this);\r\n        this.setStatWithTodo = this.setStatWithTodo.bind(this);\r\n    }\r\n\r\n    updateValue(event, field) {\r\n        const newValue = {};\r\n        newValue[field] = event.target.value;\r\n        this.setState(newValue);\r\n    }\r\n\r\n    saveUpdates(e) {\r\n        e.preventDefault()\r\n        const { id, newTitle, newDescription } = this.state\r\n        this.props.saveTodo(id, newTitle, newDescription);\r\n        this.setState({\r\n            redirectToMain: true\r\n        })\r\n    }\r\n\r\n    setStatWithTodo() {\r\n        const { todos, match } = this.props;\r\n        const todo = checkIsTodoExist(todos, match);\r\n        if (todo) {\r\n            this.setState({\r\n                id: todo.id,\r\n                newTitle: todo.title,\r\n                newDescription: todo.description\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setStatWithTodo();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.todos.length !== prevProps.todos.length) {\r\n            this.setStatWithTodo();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { dataLoaded, todos, match } = this.props;\r\n        if (!dataLoaded) {\r\n            return <Spinner />\r\n        }\r\n        if (!checkIsTodoExist(todos, match)) {\r\n            return (\r\n                <NotFound />\r\n                )\r\n            }\r\n\r\n            const { redirectToMain } = this.state;\r\n            if (redirectToMain === true) {\r\n                return <Redirect to=\"/\" from='/view/:id' />\r\n            }\r\n            return (\r\n                <form>\r\n                <h2>Edit todo:</h2>\r\n                <div className=\"form-group\">\r\n                <label htmlFor=\"todoTitleEdit\">Todo title</label>\r\n                <input type=\"text\" onChange={(e) => this.updateValue(e, 'newTitle')} value={this.state.newTitle} className=\"form-control\" id=\"todoTitleEdit\" placeholder=\"Enter title\" />\r\n\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                <label htmlFor=\"todoDescEdit\">Todo description</label>\r\n                <textarea className=\"form-control\" onChange={(e) => this.updateValue(e, 'newDescription')} id=\"todoDescEdit\" rows=\"3\" value={this.state.newDescription}></textarea>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\" onClick={this.saveUpdates}>Save</button>\r\n                <Link className=\"btn btn-primary\" to={'/'}>Back to The list</Link>\r\n                </form>\r\n                )\r\n            }\r\n        }","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { NotFound } from \"./notFound\";\r\nimport { Spinner } from './spinner';\r\nimport checkIsTodoExist from './checkIsTodoExist';\r\n\r\nexport class View extends React.Component {\r\n    render() {\r\n        const { dataLoaded, todos, match } = this.props;\r\n        if (!dataLoaded) {\r\n            return <Spinner />\r\n        }\r\n        const todo = checkIsTodoExist(todos, match);        \r\n        if (!todo) {\r\n            return (\r\n                <NotFound />\r\n            )\r\n        }\r\n        const { title, description } = todo;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <article>\r\n                    <h2>{title}</h2>\r\n                    <p>{description}</p>\r\n                </article>\r\n                <Link className=\"btn btn-default btn-xs\" to={'/'}>Back to The list</Link>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Main } from './main';\r\nimport { Edit } from './edit';\r\nimport { View } from './view';\r\nimport { NotFound } from './notFound';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nexport class AppRouter extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            todos: [],\r\n            dataLoaded: false,\r\n            localStorage: false\r\n        }\r\n        this.updateNewValue = this.updateNewValue.bind(this);\r\n        this.changeStatus = this.changeStatus.bind(this);\r\n        this.removeTodo = this.removeTodo.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        let storedData = localStorage.getItem('todos');\r\n        if (storedData) {\r\n            const todos = JSON.parse(storedData);\r\n            this.setState({\r\n                todos: todos,\r\n                dataLoaded: true,\r\n                localStorage: true\r\n            });\r\n        } else {\r\n            setTimeout(() => {\r\n                fetch('/todos.js')\r\n                    .then(response => response.json())\r\n                    .then(data => {\r\n                        const { todos } = data;\r\n                        this.setState({\r\n                            todos: todos,\r\n                            dataLoaded: true\r\n                        });\r\n                        localStorage.setItem('todos', JSON.stringify(todos));\r\n                    });\r\n            }, 3000);\r\n        }\r\n    }\r\n\r\n    getMaxId() {\r\n        const todos = this.state.todos;\r\n        let maxId = -Infinity;\r\n        todos.forEach(todo => {\r\n            if (todo.id > maxId) {\r\n                maxId = todo.id;\r\n            }\r\n        });\r\n        return maxId;\r\n    }\r\n\r\n    saveTodo = (todoId, title, description) => {\r\n        if (!todoId) {\r\n            const curId = this.getMaxId();\r\n            const newId = curId + 1;\r\n            this.state.todos.push({\r\n                id: newId,\r\n                title: title,\r\n                description: ''\r\n            });\r\n        } else {\r\n            const todo = this.state.todos.find(el => el.id === todoId);\r\n            todo.title = title;\r\n            todo.description = description;\r\n        }\r\n        this.setState({\r\n            todos: this.state.todos\r\n        });\r\n    }\r\n\r\n    removeTodo(todoId) {\r\n        const toDelIndex = this.state.todos.findIndex(el => {\r\n            return el.id === todoId;\r\n        })\r\n        this.state.todos.splice(toDelIndex, 1);\r\n        this.setState({ todos: this.state.todos });\r\n    }\r\n\r\n    updateNewValue(event, field) {\r\n        const newValue = {};\r\n        newValue[field] = event.target.value;\r\n        this.setState(newValue);\r\n    }\r\n\r\n    changeStatus(todoId, value) {\r\n        const todo = this.state.todos.find(el => el.id === todoId);\r\n        todo.isDone = value;\r\n        this.setState({\r\n            todos: this.state.todos\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        const { todos } = this.state;\r\n        const GetSource = () => {\r\n            if(this.state.localStorage){\r\n                return <p>loaded from localStorage</p>;\r\n            }\r\n            return null;\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n                {GetSource()}\r\n                <Router>\r\n                    <Switch>\r\n                        <Route\r\n                            exact path=\"/\"\r\n                            render={props => <Main {...props}\r\n                                todos={todos}\r\n                                saveTodo={this.saveTodo}\r\n                                updateNewValue={this.updateNewValue}\r\n                                changeStatus={this.changeStatus}\r\n                                removeTodo={this.removeTodo}\r\n                                dataLoaded={this.state.dataLoaded}\r\n                                localStorage={this.state.localStorage}\r\n                            />}\r\n                        />\r\n                        <Route\r\n                            path=\"/edit/:todoId\"\r\n                            render={props => <Edit {...props}\r\n                                todos={todos}\r\n                                saveTodo={this.saveTodo}\r\n                                updateNewValue={this.updateNewValue}\r\n                                dataLoaded={this.state.dataLoaded}\r\n                                localStorage={this.state.localStorage}\r\n\r\n                            />}\r\n                        />\r\n                        <Route\r\n                            path=\"/view/:todoId\"\r\n                            component={props => <View {...props} \r\n                                todos={todos} \r\n                                dataLoaded={this.state.dataLoaded} \r\n                                localStorage={this.state.localStorage}\r\n                            />}\r\n                        />\r\n                        <Route path='*' exact={false} component={NotFound} />\r\n                    </Switch>\r\n                </Router>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { AppRouter } from './appRouter';\r\n\r\n\r\nReactDOM.render(<AppRouter />, document.getElementById('root'));\r\n"],"sourceRoot":""}